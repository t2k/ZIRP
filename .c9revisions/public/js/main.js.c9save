{"ts":1358818098033,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Filename: main.js\r\n// \r\nrequire.config({\r\n    paths: {\r\n        // note these are all AMD compliant versions\r\n        jquery: '../components/jquery/jquery',  // amd version\r\n        underscore: '../components/underscore-amd/underscore', // amd version\r\n        underscoreM: 'libs/underscore/underscore-mustache',  // templating supporting mustache style {{ ... }}\r\n        backbone: '../components/backbone-amd/backbone', // amd version\r\n        'backbone.wreqr': '../components/backbone.wreqr/lib/amd/backbone.wreqr', // amd version\r\n        'backbone.eventbinder': '../components/backbone.eventbinder/lib/amd/backbone.eventbinder', // amd version\r\n        'backbone.babysitter': '../components/backbone.babysitter/lib/amd/backbone.babysitter', // amd version\r\n        marionette: '../components/marionette/lib/core/amd/backbone.marionette',  // amd version\r\n        bootstrapModal: '../components/bootstrap/docs/assets/js/bootstrap-modal', //-2.1.1',  // just using .modal for now but loading entire js bootstrap\r\n        bootstrapDropdown: '../components/bootstrap/docs/assets/js/bootstrap-dropdown', //-2.1.1',  // just using .modal for now but loading entire js bootstrap\r\n        text: '../components/requirejs-text/text'\r\n    },\r\n\r\n    shim: {\r\n        bootstrapModal: ['jquery'],\r\n        bootstrapDropdown: ['jquery']\r\n    } \r\n});\r\n\r\nrequire(['app', 'jquery', 'controllers/index', 'routers/index', 'utils/jquery.tkUtil'],\r\n        function (app, $, controller, router) {\r\n            // here's the only way I can think of, call latent webservice asyncronously to get the .NET auth username and \r\n            // dependency inject this into our router;\r\n            // maybe better soln would be to create an app Model with properties that we can change\r\n            // which would trigger events/routes views etc... \r\n            // this/ legacy ajax/asmx call returns json in a .d wrapper\r\n            $.when($.get.NetAuthUserName()).then(function (response) {\r\n                if (response && response.d && response.d.status === 'success') {\r\n                    //alert(response.d.data.userName);\r\n\r\n                    var options = {\r\n                        controller: controller({ userName: response.d.data.userName }),\r\n                        router: router\r\n                    };\r\n                    //\r\n                    app.start(options);\r\n                    \r\n                } else {\r\n                    alert('authentication error starting application...');\r\n                }\r\n\r\n            });\r\n\r\n        });"]],"start1":0,"start2":0,"length1":0,"length2":2544}]],"length":2544}
