{"ts":1359118401308,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"ZIRP\n====\n\nZirpen\n\n\n~~~\n// app.js  define the marionette application object, app-regions, modulate events (vent) and start backbone.history\ndefine(['backbone', 'marionette', 'vent', 'bootstrapModal'], function (Backbone, Marionette, vent) {\n\n    // set up the app instance\n    var App = new Marionette.Application();\n    // configuration, setting up regions, etc ...\n\n    // see http://lostechies.com/derickbailey/2012/04/17/managing-a-modal-dialog-with-backbone-and-marionette/\n    var ModalRegion = Marionette.Region.extend({\n        el: \"#modal\",\n\n        constructor: function () {\n            Marionette.Region.prototype.constructor.apply(this, arguments);\n            console.log('modalRegion: constructor');\n            this.on(\"show\", this.showModal, this);\n        },\n\n        showModal: function (view) {\n            console.log('showModal called...');\n            view.on(\"close\", this.hideModal, this);\n            this.$el.modal('show');\n        },\n\n        hideModal: function () {\n            this.$el.modal('hide');\n        }\n    });\n\n\n    App.addRegions({\n        content: \"#content\",\n        modal: ModalRegion\n    });\n\n    // refactor, can this be better handled by a route?\n    // global event triggers passing in uid of selected user\n    vent.on('app:dialog', function (view) {\n        //var View = require('views/views.profile-dialog');\n        //var user = new profileModel({ uid: data });\n        //$.when(user.fetch()).then(function () {\n        //view = new dlgView({ model: model });\n        console.log('app:dialog handler was called');\n        App.modal.show(view); // $('#appModal').html(view.render().el).modal();\n        //});\n    });\n\n    // show an itemview: in the content region\n    vent.on('app:show', function (appView) {\n        App.content.show(appView);\n    });\n    // show an itemview: in the content region\n    vent.on('layout:rendered', function () {\n        //if (console) { console.log('layout:render==>app'); }\n        // App.content.show(appView);\n    });\n\n\n    // marionette app events...\n    App.on(\"initialize:after\", function () {\n        //if (console) { console.log('initialize:after'); }\n        Backbone.history.start();\n    });\n\n    // pass in router/controller via options\n    App.addInitializer(function (options) {\n        // configure for loading templates stored externally...\n        Marionette.TemplateCache.prototype.loadTemplate = function (templateId) {\n            // Marionette expects \"templateId\" to be the ID of a DOM element.\n            // But with RequireJS, templateId is actually the full text of the template.\n            var template = templateId;\n\n            // Make sure we have a template before trying to compile it\n            if (!template || template.length === 0) {\n                var msg = \"Could not find template: '\" + templateId + \"'\";\n                var err = new Error(msg);\n                err.name = \"NoTemplateError\";\n                throw err;\n            }\n            return template;\n        };\n\n        // pass in username to the controller...\n        //var controller = new options.controller({userName: options.userName});\n        //alert(options.userName);\n        //var x = _.extend(options.controller.prototype, {userName: options.userName });\n        // init library router/controller\n        new options.router.Router({\n            controller: options.controller // controller implements search and defaultsearch\n        });\n\n    });\n\n    // export the app from this module\n    return App;\n});\n~~~"]],"start1":0,"start2":0,"length1":0,"length2":3508}]],"length":3508}
{"contributors":[],"silentsave":false,"ts":1359118421375,"patch":[[{"diffs":[[0,"irpen\n\n\n"],[-1,"~~~"],[1,"```js"],[0,"\n// app."]],"start1":12,"start2":12,"length1":19,"length2":21},{"diffs":[[0,"});\n"],[-1,"~~~"],[1,"''''"]],"start1":3503,"start2":3503,"length1":7,"length2":8}]],"length":3511,"saved":false}
{"ts":1359118487126,"patch":[[{"diffs":[[1,"#"],[0,"ZIRP\n==="]],"start1":0,"start2":0,"length1":8,"length2":9},{"diffs":[[0,"Zirpen\n\n"],[1,"###Sample Code\n+ app.js"],[0,"\n```js\n/"]],"start1":12,"start2":12,"length1":16,"length2":39}]],"length":3535,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359119816704,"patch":[[{"diffs":[[1,"#"],[0,"#ZIRP\n=="]],"start1":0,"start2":0,"length1":8,"length2":9},{"diffs":[[0,"==\n\n"],[1,"####"],[0,"Zirpen\n\n"],[-1,"###S"],[1,"A s"],[0,"ample "],[-1,"Code\n+"],[1,"app to test Node.js/Express/Mongoose/MongeoDB server stack \n\n####"],[0," app.js\n"],[1,"\n"],[0,"```j"]],"start1":9,"start2":9,"length1":40,"length2":103}]],"length":3599,"saved":false}
