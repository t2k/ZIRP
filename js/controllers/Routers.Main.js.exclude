// Filename: Routers.Main.js
define(function (require) {
    $ = require('jquery'),
    _ = require('underscore'),
    Backbone = require('backbone');

    // global event handler
    //appEvents = require('appEvents'),
    // the main View for this App (self instantiated)



    var RouterMain = Backbone.Router.extend({
        initialize: function () {
            this.mainView = require('views.app');
            //if (console) { console.log('INSIDE: initialize: (inside RouterMain CONTRUCTOR)'); }
        },

        routes: {
            '': 'index',
            '!/:id': 'home',
            '!/:id/followers': 'followers',
            '!/:id/following': 'following',
            '!/:id/profile': 'profile',
            'connect': 'connect',
            'discover': 'discover',
            '*path': 'defaultRoute'
            //'/followers/:id': 'showFollowers',
            //'/following/:id': 'showFollowing'
        },
        // unhandled routes go here!
        defaultRoute: function (path) {
            //if (console) { console.log('UNHANDLED ROUTE! ' + path); };
        },

        index: function () {
            // require.JS  AMD loading!

            var tweets = require('collections.timeline'),
            TimelineView = require('views.timelineCollection'),
            miniProfileView = require('views.mini-profile'),
            wtfView = require('views.module-wtf'),
            navView = require('views.nav-main'),
            zirpBoxView = require('views.zirpen-box'),
            profileModel = require('models.profile'),
            userColl = require('collections.user'),
            timelineView = new TimelineView({ collection: tweets, el: $('#stream-items-id') });


//            if (console) {
//                console.log('INSIDE: PAGELOAD/Index route DI: ' + this.userName);
//            }

            var homeUser = new profileModel({ uid: this.userName });

            tweets.url = '/api/timeline/' + this.userName;
            // who to follow
            userColl.url = '/api/wtf/' + this.userName + '/0/4';  // page 0 size 4 ie first 4 wtf items

            $.when(homeUser.fetch()).then(function () {
                // dependency intection
                new navView({ el: '.navbar', model: homeUser }).render(); // static nav view

                var mpView = new miniProfileView({ el: '.mini-profile', model: homeUser }).render();
                var zirpView = new zirpBoxView({ uid: homeUser.get('uid') }).render();
                $(zirpView.el).appendTo(mpView.el);

                // append who to follow module view to the dashboard
                $.when(userColl.fetch()).then(function () {
                    $.wait(10).then(function () {
                        $(new wtfView({ collection: userColl }).render().el).appendTo($('.dashboard'));
                    });

                });
            });

            // dependency injection pattern:  decouple objects from DOM

            tweets.fetch();  // timelineView responds to the 'reset' event triggered here...

        },

        // 
        home: function (id) {

//            if (console) {
//                console.log('INSIDE:  HOME route with param ' + id);
//            }

            var profileModel = require('models.profile'),
            //profileView = require('views.profile'),
            //tweets = require('collections.timeline'),
            // note by passing uid attrib (overridden w/ idAttrib:uid in model the fetch will append the id to the route
            selUser = new profileModel({ uid: id });

            //tweets.url = '/api/timeline/' + id;

            $.when(selUser.fetch()).then(function () {
                var pView = require('views.profile'),
                pNavView = require('views.profileNav');
                // dependency intection
                $(new pView({ model: selUser }).render().el).appendTo($('#profile-container').empty()); // static nav view
                $(new pNavView({ model: selUser }).render().el).appendTo($('.dashboard').empty()); // static nav view
                $('#appModal').modal('hide');
            });


        },


        followers: function (id) {
//            if (console) { console.log('INSIDE:  FOLLOWERS route with param ' + id); };

            var profileModel = require('models.profile'),
            selUser = new profileModel({ uid: id }),
            collection = require('collections.user');


            $.when(selUser.fetch()).then(function () {
                var pView = require('views.profile'),
                pNavView = require('views.profileNav'),
                followersView = require('views.followerCollection');
                // dependency intection
                $(new pView({ model: selUser }).render().el).appendTo($('#profile-container').empty()); // static nav view
                $(new pNavView({ model: selUser }).render().el).appendTo($('.dashboard').empty()); // static nav view
                collection.url = '/api/followers/' + selUser.get('uid') + '/0/12';  // page 0 size 4 ie first 4 wtf items

                $.when(collection.fetch()).then(function () {
                    $('#stream-items-id').empty();
                    new followersView({ collection: collection, el: $('#stream-items-id') }).render();
                    $('#appModal').modal('hide');
                });
            });

        },


        following: function (id) {


//            if (console) { console.log('INSIDE:  FOLLOWING route with param ' + id); };
            var profileModel = require('models.profile'),
            selUser = new profileModel({ uid: id }),
            followingColl = require('collections.user');


            $.when(selUser.fetch()).then(function () {
                var pView = require('views.profile'),
                pNavView = require('views.profileNav'),
                followingView = require('views.followingCollection');
                // dependency intection
                $(new pView({ model: selUser }).render().el).appendTo($('#profile-container').empty()); // static nav view
                $(new pNavView({ model: selUser }).render().el).appendTo($('.dashboard').empty()); // static nav view
                followingColl.url = '/api/following/' + selUser.get('uid') + '/0/12';  // page 0 size 4 ie first 4 wtf items

                $.when(followingColl.fetch()).then(function () {
                    $.wait(100).then(function () {
                        $('#stream-items-id').empty();
                        new followingView({ collection: followingColl, el: $('#stream-items-id') }).render();
                        $('#appModal').modal('hide');
                    });

                });
            });


        },

        profile: function (id) {
//            if (console) { console.log('INSIDE:  PROFILE route with param ' + id); };
        },

        connect: function () {
//            if (console) { console.log('INSIDE:  CONNECT route with param '); };
        },


        discover: function () {
            if (console) { console.log('INSIDE:  DISCOVER route with param '); };
        }

    });

    // dependency intection pattern
    var initialize = function (username) {
//        if (console) { console.log('routers.main initialize: call into router and extend with ' + username); }

        var app_router = RouterMain.extend({ userName: username });
        var app = new app_router;

        var start = Backbone.history.start(); //{ pushState: true, root: "/ZIRP/", silent: true });

        // if (console) { console.log('backbone.history.start: ' + start); }
        // extend the RouterMain with dependency injection (new user name)

    };

    return {
        initialize: initialize
    };
});


